(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[43],{7935:function(t,s,e){"use strict";e.r(s);var i=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"q-pa-md"},[t.devices.length>1?e("div",[t._v(t._s(t.$t("studies.tasks.po60.moreDevices")))]):t._e(),t.devices.length>1?e("q-list",{staticClass:"q-mt-md",attrs:{bordered:""}},t._l(t.devices,(function(s){return e("q-item",{directives:[{name:"ripple",rawName:"v-ripple"}],key:s.id,attrs:{clickable:"",id:s.id},on:{click:function(e){return t.connect(s,!0)}}},[e("q-item-section",[t._v(t._s(s.id))])],1)})),1):t._e(),e("q-dialog",{attrs:{"transition-show":"scale","transition-hide":"scale","no-esc-dismiss":"","no-backdrop-dismiss":""},model:{value:t.instructionDialog,callback:function(s){t.instructionDialog=s},expression:"instructionDialog"}},[e("q-card",[e("div",{staticClass:"q-pa-sm"}),e("q-card-section",[e("div",{staticClass:"row no-wrap items-center"},[e("div",{staticClass:"col text-body1"},[e("p",[t._v(t._s(t.$t("studies.tasks.po60.takeMeasurement")))])])])])],1)],1),e("q-inner-loading",{attrs:{showing:t.showScanning}},[e("div",{staticClass:"text-overline",attrs:{color:"dark-grey"}},[t._v(t._s(t.$t("studies.tasks.po60.scanning")))]),e("q-spinner-dots",{attrs:{size:"40px",color:"primary"}})],1),e("q-inner-loading",{attrs:{showing:t.showConnecting}},[e("div",{staticClass:"text-overline",attrs:{color:"dark-grey"}},[t._v(t._s(t.$t("studies.tasks.po60.connecting")))]),e("q-spinner-dots",{attrs:{size:"40px",color:"primary"}})],1)],1)},n=[],o=(e("4e82"),e("e6cf"),e("3fd3")),a=e("6a6d"),c={name:"PO60ConnectPage",props:{studyKey:String,taskId:Number},data(){return{devices:[],instructionDialog:!1,showScanning:!1,showConnecting:!1,connectionAttempts:0,maxConnectionAttempts:5}},methods:{async scan(){this.instructionDialog=!0;try{this.devices=await o["a"].scan(25e3),this.instructionDialog=!1,0===this.devices.length?this.$q.dialog({title:this.$t("studies.tasks.po60.noDeviceTitle"),message:this.$t("studies.tasks.po60.noDevice"),cancel:this.$t("common.cancel"),ok:this.$t("common.retry"),persistent:!0}).onOk((t=>{this.scan()})).onCancel((()=>{this.abandon()})):1===this.devices.length?this.connect(this.devices[0]):this.devices.sort(((t,s)=>s.rssi-t.rssi))}catch(t){this.instructionDialog=!1,console.error("Scan error",t),this.$q.dialog({title:this.$t("errors.error"),message:this.$t("studies.tasks.po60.scanFailed"),cancel:this.$t("common.cancel"),ok:this.$t("common.retry"),persistent:!0}).onOk((t=>{this.scan()})).onCancel((()=>{this.abandon()}))}},async connect(t,s){try{s?this.showConnecting=!0:(this.instructionDialog=!0,this.$q.platform.is.ios&&await o["a"].scanForId(t.id,5e3)),this.connectionAttempts++,await o["a"].connect(t),this.instructionDialog=!1,this.showConnecting=!1,t.authenticated=!0,await a["a"].setDevicePO60(t),this.moveToDownloadPage()}catch(e){console.error(e),this.connectionAttempts<this.maxConnectionAttempts?(console.log("Attempting connect again...",this.connectionAttempts),this.connect(t)):(this.connectionAttempts=0,this.instructionDialog=!1,this.$q.dialog({title:this.$t("errors.error"),message:this.$t("studies.tasks.po60.connectionFail"),cancel:this.$t("common.cancel"),ok:this.$t("common.retry"),persistent:!0}).onOk((async()=>{await o["a"].disconnect(),t.authenticated?this.connect(t):this.scan()})).onCancel((()=>{this.abandon()})))}},abandon(){try{o["a"].disconnect()}catch(t){console.error("cannot disconnect pulse oximeter",t)}this.$router.push({name:"tasker",params:{rescheduleTasks:!0}})},moveToDownloadPage(){this.$router.push({name:"po60DataDownload",params:{studyKey:this.studyKey,taskId:this.taskId}})}},async mounted(){let t=await a["a"].getDevicePO60();t?this.connect(t):this.scan()}},r=c,d=e("2877"),l=e("1c1c"),h=e("66e5"),m=e("4074"),p=e("24e8"),u=e("f09f"),g=e("068f"),v=e("a370"),k=e("74f7"),w=e("8380"),$=e("714f"),y=e("eebe"),D=e.n(y),C=Object(d["a"])(r,i,n,!1,null,null,null);s["default"]=C.exports;D()(C,"components",{QList:l["a"],QItem:h["a"],QItemSection:m["a"],QDialog:p["a"],QCard:u["a"],QImg:g["a"],QCardSection:v["a"],QInnerLoading:k["a"],QSpinnerDots:w["a"]}),D()(C,"directives",{Ripple:$["a"]})}}]);