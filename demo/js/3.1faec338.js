(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[3],{"5b54":function(t,e,s){"use strict";s.r(e);var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("q-page",{attrs:{padding:""}},[s("q-pull-to-refresh",{attrs:{label:"Default spinner"},on:{refresh:t.refresh}},[t.newstudies?s("q-banner",{staticClass:"bg-warning text-white q-mb-sm",attrs:{rounded:"","inline-actions":"",icon:"new_releases",type:"warning"},scopedSlots:t._u([{key:"action",fn:function(){return[s("q-btn",{attrs:{color:"blue",label:t.$t("studies.checkNewStusy"),to:"studies"}})]},proxy:!0}],null,!1,845094109)},[t._v("\n      "+t._s(t.$t("studies.newStudy"))+"!\n      ")]):t._e(),t.nostudies?s("q-item-label",{staticClass:"q-title fixed-center"},[t._v("\n      "+t._s(t.$t("studies.noStudies"))+"\n    ")]):s("div",{attrs:{highlight:""}},[s("q-item-label",{attrs:{header:""}},[t._v("\n        "+t._s(t.$t("studies.tasks.pendingTasks"))+"\n      ")]),t._l(t.studiesInfo,(function(e){return s("q-list",{key:"upcoming-"+e._key,staticClass:"q-mt-sm",attrs:{padding:"",bordered:""}},[s("q-item-section",[s("q-item-label",{attrs:{header:"",overline:""}},[t._v(t._s(e.generalities.title[t.$root.$i18n.locale]))]),t._l(t.tasks.upcoming,(function(i,a){return s("taskListItem",{key:"item-"+a,attrs:{task:t.filterTask(i,e),isMissedTask:!1}})}))],2),0===t.tasks.upcoming.length?s("q-item",[s("q-item-section",{attrs:{avatar:""}},[s("q-icon",{attrs:{color:"primary",name:"check"}})],1),s("q-item-section",[s("q-item-label",[t._v(t._s(t.$t("studies.tasks.noPendingTasks")))])],1)],1):t._e()],1)})),s("q-item-label",{attrs:{header:""}},[t._v("\n        "+t._s(t.$t("studies.tasks.missedTasks"))+"\n      ")]),t._l(t.studiesInfo,(function(e){return s("q-list",{key:"missed-"+e._key,staticClass:"q-mt-sm",attrs:{padding:"",bordered:""}},[t.tasks.missed.length>0?s("q-item-section",[s("q-item-label",{attrs:{header:"",overline:""}},[t._v(t._s(e.generalities.title[t.$root.$i18n.locale]))]),t._l(t.tasks.missed,(function(i,a){return s("taskListItem",{key:"item-"+e._key+"-"+a,attrs:{task:t.filterTask(i,e),isMissedTask:!0}})}))],2):s("q-item",[s("q-item-section",{attrs:{avatar:""}},[s("q-icon",{attrs:{color:"primary",name:"check"}})],1),s("q-item-section",[s("q-item-label",[t._v(t._s(t.$t("studies.tasks.noMissedTasks")))])],1)],1)],1)})),t.tasks.alwaysOn.length>0?s("div",[s("q-item-label",{attrs:{header:""}},[t._v("\n          "+t._s(t.$t("studies.tasks.alwaysOnTasks"))+"\n        ")]),t._l(t.studiesInfo,(function(e){return s("q-list",{key:"alwayson-"+e._key,staticClass:"q-mt-sm",attrs:{padding:"",bordered:""}},[s("q-item-section",[s("q-item-label",{attrs:{header:"",overline:""}},[t._v(t._s(e.generalities.title[t.$root.$i18n.locale]))]),t._l(t.tasks.alwaysOn,(function(i,a){return s("taskListItem",{key:"item-"+a,attrs:{task:t.filterTask(i,e),isMissedTask:!1}})}))],2)],1)}))],2):t._e()],2)],1),this.tasks.completedStudyAlert?s("q-dialog",{attrs:{maximized:""},model:{value:t.completedStudyModal,callback:function(e){t.completedStudyModal=e},expression:"completedStudyModal"}},[s("div",{staticClass:"q-pa-lg text-center",staticStyle:{"background-color":"white"}},[s("div",{staticClass:"text-h4 q-mb-md"},[t._v(t._s(t.$t("studies.studyCompletedHeadline"))+"!")]),s("div",[s("img",{staticStyle:{width:"30vw","max-width":"150px"},attrs:{src:"imgs/confetti.svg"}})]),s("p",{domProps:{innerHTML:t._s(t.$t("studies.studyCompletedText",{studyname:t.completedStudyTitle}))}}),s("q-btn",{attrs:{color:"primary",label:t.$t("common.close")},on:{click:function(e){return t.studyCompleted()}}})],1)]):t._e()],1)},a=[],n=(s("ddb0"),function(){var t=this,e=t.$createElement,s=t._self._c||e;return this.task.studyKey?s("q-item",{nativeOn:{click:function(e){return t.changeRoute(e)}}},[s("q-item-section",{attrs:{avatar:""}},[s("q-icon",{attrs:{color:"grey",name:t.icon}})],1),s("q-item-section",[s("q-item-label",[t._v(t._s(t.title))]),s("q-item-label",{attrs:{caption:""}},[t._v(t._s(t.main))])],1),this.isMissedTask?s("q-item-section",{attrs:{side:"",top:""}},[t._v("\n    "+t._s(t.timeRemaining)+"\n  ")]):t._e()],1):t._e()}),o=[],r=s("c1df"),l=s.n(r),d={name:"TaskListItem",props:["task","isMissedTask"],data(){return{icon:void 0,title:void 0,main:void 0}},methods:{changeRoute:function(){const t=this.task.type,e=this.task.studyKey,s=this.task.taskId,i=this.task.formKey;if("form"===t)this.$router.push({name:"formIntro",params:{studyKey:e,taskId:s,formKey:i},query:{icon:this.icon,title:this.title}});else if("smwt"===t)this.$router.push({name:"smwtIntro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("qcst"===t)this.$router.push({name:"qcstIntro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("miband3"===t)this.$router.push({name:"miband3Intro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("po60"===t)this.$router.push({name:"po60Intro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("position"===t)this.$router.push({name:"positionIntro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("peakFlow"===t)this.$router.push({name:"peakFlowIntro",params:{studyKey:e,taskId:s},query:{icon:this.icon,title:this.title}});else if("dataQuery"===t)this.$router.push({name:"dataQueryIntro",params:{taskId:s,studyKey:e},query:{icon:this.icon,title:this.title}});else{if("fingerTapping"!==t)throw new Error("Could not changeRoute with task type.");this.$router.push({name:"fingerTappingIntro",params:{taskId:s,studyKey:e},query:{icon:this.icon,title:this.title}})}}},created(){"dataQuery"===this.task.type?(this.title=this.$i18n.t("studies.tasks.dataQuery.shortTitle"),this.main=this.$i18n.t("studies.tasks.dataQuery.shortDescription"),this.icon="insert_chart_outlined"):"form"===this.task.type?(this.title=this.task.formName[this.$root.$i18n.locale],this.main=this.$i18n.t("studies.tasks.form.shortDescription"),this.icon="format_list_bulleted"):"smwt"===this.task.type?(this.title=this.$i18n.t("studies.tasks.smwt.shortTitle"),this.main=this.$i18n.t("studies.tasks.smwt.shortDescription"),this.icon="directions_walk"):"qcst"===this.task.type?(this.title=this.$i18n.t("studies.tasks.qcst.shortTitle"),this.main=this.$i18n.t("studies.tasks.qcst.shortDescription"),this.icon="layers"):"miband3"===this.task.type?(this.title=this.$i18n.t("studies.tasks.miband3.shortTitle"),this.main=this.$i18n.t("studies.tasks.miband3.shortDescription"),this.icon="watch"):"po60"===this.task.type?(this.title=this.$i18n.t("studies.tasks.po60.shortTitle"),this.main=this.$i18n.t("studies.tasks.po60.shortDescription"),this.icon="touch_app"):"position"===this.task.type?(this.title=this.$i18n.t("studies.tasks.position.shortTitle"),this.main=this.$i18n.t("studies.tasks.position.shortDescription"),this.icon="place"):"peakFlow"===this.task.type?(this.title=this.$i18n.t("studies.tasks.peakflow.shortTitle"),this.main=this.$i18n.t("studies.tasks.peakflow.shortDescription"),this.icon="air"):"fingerTapping"===this.task.type&&(this.title=this.$i18n.t("studies.tasks.fingerTapping.shortTitle"),this.main=this.$i18n.t("studies.tasks.fingerTapping.shortDescription"),this.icon="touch_app")},computed:{timeRemaining:function(){return this.$i18n.t("studies.tasks.due")+" "+l()(this.task.due).fromNow()}}},u=d,c=s("2877"),h=s("66e5"),m=s("4074"),y=s("0016"),p=s("0170"),k=s("eebe"),f=s.n(k),g=Object(c["a"])(u,n,o,!1,null,null,null),w=g.exports;f()(g,"components",{QItem:h["a"],QItemSection:m["a"],QIcon:y["a"],QItemLabel:p["a"]});var b=s("9bf1"),q=s("6a6d"),T=s("c313"),_=s("8847"),S=s("55b4"),$=s("3615"),D=s("0967"),v=s("1e59");function I(t){return t?new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds())):null}function O(t){return t?new Date(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate(),t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds()):null}function C(t,e){let s={upcoming:[],missed:[],alwaysOn:[]};for(const i of t)if("accepted"===i.currentStatus){let t=e.find((t=>t._key===i.studyKey));if((new Date).toISOString()>t.generalities.endDate+"T23:59:59"){s.completedStudyAlert={studyTitle:t.generalities.title,studyPart:i};continue}const a=t.tasks.filter((t=>{const e=i.taskItemsConsent.find((e=>e.taskId===t.id));return e.consented}));let n=!0;for(const e of a){if("dataQuery"===e.type){if(D["b"].is.ios&&v["a"].isAndroidOnly(e.dataType))continue;if(D["b"].is.android&&v["a"].isIOSOnly(e.dataType))continue}if(e.scheduling.alwaysOn){if(K(i.acceptedTS,e.scheduling)){n=!1;let i={type:e.type,studyKey:t._key,taskId:e.id,alwaysOn:!0};"form"===e.type&&(i.formName=e.formName,i.formKey=e.formKey),s.alwaysOn.push(i)}}else{let a=new Date;a.setHours(0,0,0,0);let o=new Date;o.setHours(23,59,59,999);let r=new Date(new Date(t.generalities.endDate).getTime()+864e5),l=new Date(i.acceptedTS);l.setHours(0,0,1);let d,u,c,h=x(l,r,e.scheduling),m=h.between(I(a),I(r));if(m.length>0&&(n=!1),i.taskItemsConsent){const t=i.taskItemsConsent.find((t=>t.taskId===e.id));t&&t.lastExecuted&&(d=new Date(t.lastExecuted))}d?(u=h.between(I(d),I(a)),u=u.length>0?O(u[u.length-1]):null):u=O(h.before(I(a))),c=d&&d>a?h.between(I(d),I(new Date)):h.between(I(a),I(new Date)),c=c.length>0?O(c[0]):null;let y={type:e.type,studyKey:t._key,taskId:e.id};"form"===e.type&&(y.formName=e.formName,y.formKey=e.formKey),null!==c?s.upcoming.push(Object.assign({missed:!1,due:c},y)):null!==u&&s.missed.push(Object.assign({missed:!0,due:u},y))}}n&&(s.completedStudyAlert={studyTitle:t.generalities.title,studyPart:i})}return s}function K(t,e){if(!t||!e)throw new Error("both arguments must be specified in isAlwaysOnTaskDue");let s=new Date,i=new Date(t);if("consent"!==e.startEvent)throw new Error("The only start event recognised is consent");if(e.startDelaySecs&&(i=new Date(i.getTime()+1e3*e.startDelaySecs)),e.untilSecs){let t=new Date(i.getTime()+1e3*e.untilSecs);if(s>i&&s<t)return!0}else if(s>i)return!0;return!1}function x(t,e,s){let i=t;if("consent"!==s.startEvent)throw new Error("The only start event recognised is consent");s.startDelaySecs&&(i=new Date(t.getTime()+1e3*s.startDelaySecs));let a,n=e;if(s.untilSecs){let t=new Date(i.getTime()+1e3*s.untilSecs);t<n&&(n=new Date(t))}switch(s.intervalType){case"y":a=S["a"].YEARLY;break;case"m":a=S["a"].MONTHLY;break;case"w":a=S["a"].WEEKLY;break;case"d":a=S["a"].DAILY;break;default:throw new Error("No Frequency Specified")}let o=[];if(s.weekDays)for(let d=0;d<s.weekDays.length;d++)switch(s.weekDays[d]){case"mo":o.push(S["a"].MO);break;case"tu":o.push(S["a"].TU);break;case"we":o.push(S["a"].WE);break;case"th":o.push(S["a"].TH);break;case"fr":o.push(S["a"].FR);break;case"sa":o.push(S["a"].SA);break;case"su":o.push(S["a"].SU);break}let r={};r.dtstart=I(i),r.until=n,r.freq=a,s.interval&&s.interval.length&&(r.interval=s.interval),s.months&&s.months.length&&(r.bymonth=s.months),s.monthDays&&s.monthDays.length&&(r.bymonthday=s.monthDays),o&&o.length&&(r.byweekday=o),s.hours&&s.hours.length&&(r.byhour=s.hours),s.occurrences&&(r.count=s.occurrences);try{return new S["a"](r)}catch(l){throw console.error("Error while parsing scheduling object",r),console.error("Scheduling information: ",s),console.error("Star time, study end:",t,e),l}}async function Q(){return $["a"].cancelAll()}const E=20;async function M(t,e,s){let i=[],a=[];for(const n of e.tasks){let o;if(s.taskItemsConsent&&(o=s.taskItemsConsent.find((t=>t.taskId===n.id))),o&&!o.consented)continue;if("dataQuery"===n.type){if(D["b"].is.ios&&v["a"].isAndroidOnly(n.dataType))continue;if(D["b"].is.android&&v["a"].isIOSOnly(n.dataType))continue}if(n.scheduling.alwaysOn)continue;let l=x(t,e.generalities.endDate,n.scheduling),d=l.between(I(new Date),I(new Date(e.generalities.endDate)),!0);for(let t=0;t<d.length&&t<E;t++){let s,l=d[t],u=r(l).startOf("minute").toDate(),c="";if(e._key){let t=e._key.toString();c+=t.slice(-4)}c+=n.id,c+=t,o&&o.lastExecuted&&(s=r(new Date(o.lastExecuted)));let h=!1;s&&r(u).isBetween(r().startOf("day"),r().endOf("day"))&&s.isBetween(r().startOf("day"),r(u))&&(h=!0),-1!==a.indexOf(r(u).unix())||h||(a.push(r(u).unix()),i.push({id:parseInt(c),title:_["b"].t("studies.scheduling.due"),text:_["b"].t("studies.scheduling.start"),foreground:!0,trigger:{at:u}}))}}await $["a"].schedule(i)}var A={name:"TaskerPage",components:{taskListItem:w},data(){return{nostudies:!1,newstudies:!1,tasks:{upcoming:[],missed:[],alwaysOn:[],completedStudyAlert:void 0,completedStudyTitle:void 0},completedStudyModal:!1,studiesInfo:[]}},async created(){this.load(),setTimeout((()=>{this.load(!1)}),432e5)},methods:{refresh(t){this.load(!0).then(t)},filterTask(t,e){return t.studyKey===e._key?t:""},async load(t){t||this.$q.loading.show();try{try{let t=await T["a"].getNewStudiesKeys();t.length>0?this.newstudies=!0:this.newstudies=!1}catch(e){console.error("Cannot connect to server, but thats OK",e)}await Q();try{let t=await T["a"].getProfile(b["a"].user._key);if(!t.studies||0===t.studies.length)return await q["a"].setStudiesParticipation([]),this.$q.loading.hide(),void(this.nostudies=!0);await q["a"].setStudiesParticipation(t.studies)}catch(e){console.error("Cannot connect to server, but thats OK",e)}let t=await q["a"].getStudiesParticipation();if(!t)return this.$q.loading.hide(),void(this.nostudies=!0);let s=[],i=[];this.studiesInfo=[];for(const e of t){let t=await q["a"].getStudyDescription(e.studyKey);t||(t=await T["a"].getStudyDescription(e.studyKey),await q["a"].setStudyDescription(e.studyKey,t)),"accepted"===e.currentStatus&&e.reminders&&await M(new Date(e.acceptedTS),t,e),"accepted"===e.currentStatus&&(s.push(e),i.push(t),this.studiesInfo.push(t))}if(0===i.length)return this.$q.loading.hide(),void(this.nostudies=!0);let a=C(s,i);this.tasks=a,a.completedStudyAlert&&(this.completedStudyTitle=a.completedStudyAlert.studyTitle[this.$root.$i18n.locale],this.completedStudyModal=!0),this.$q.loading.hide()}catch(e){console.error(e),this.$q.loading.hide(),this.$q.dialog({title:this.$i18n.t("errors.error"),message:this.$i18n.t("errors.generalError"),color:"warning",ok:this.$i18n.t("common.retry"),preventClose:!0}).onOk((()=>{this.load()}))}},async studyCompleted(){let t=this.tasks.completedStudyAlert.studyPart;t.currentStatus="completed",t.completedTS=new Date;try{await T["a"].updateStudyStatus(b["a"].user._key,t.studyKey,t),delete t.extraItemsConsent,delete t.taskItemsConsent,await q["a"].setStudyParticipation(t),this.load(),this.completedStudyModal=!1}catch(e){console.error("Cannot set the study as completed",e),this.$q.notify({color:"negative",message:this.$i18n.t("errors.connectionError")+": "+e.message,icon:"report_problem"})}}}},L=A,P=s("9989"),N=s("59d7"),H=s("54e1"),U=s("9c40"),R=s("1c1c"),F=s("24e8"),Y=Object(c["a"])(L,i,a,!1,null,null,null);e["default"]=Y.exports;f()(Y,"components",{QPage:P["a"],QPullToRefresh:N["a"],QBanner:H["a"],QBtn:U["a"],QItemLabel:p["a"],QList:R["a"],QItemSection:m["a"],QItem:h["a"],QIcon:y["a"],QDialog:F["a"]})}}]);