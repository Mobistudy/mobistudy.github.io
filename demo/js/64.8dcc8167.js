(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[64],{"846b":function(e,n,t){"use strict";t.r(n);var s=function(){var e=this,n=e._self._c;return n("q-page",{attrs:{padding:""}},[n("q-inner-loading",{attrs:{showing:e.showConnecting}},[n("div",{staticClass:"text-overline",attrs:{color:"dark-grey"}},[e._v(e._s(e.$t("studies.tasks.position.connecting")))]),n("q-spinner-dots",{attrs:{size:"40px",color:"primary"}})],1),e.environment?n("p",{staticClass:"text-subtitle2 text-center"},[e.environment.weather&&e.environment.weather.location?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.approxLocation"))+": "+e._s(e.environment.weather.location)),n("br")]):e._e(),e.environment.weather&&e.environment.weather.icon?n("span",[n("img",{attrs:{src:e.environment.weather.icon}}),n("br")]):e._e(),e.environment.weather&&e.environment.weather.description?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.weather"))+": "+e._s(e.environment.weather.description)+" "),n("br")]):e._e(),e.environment.weather&&e.environment.weather.temperature?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.temperature"))+": "+e._s(e.environment.weather.temperature.toFixed(0))+" Â°C "),n("br")]):e._e(),e.environment.weather&&e.environment.weather.humidity?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.humidity"))+": "+e._s(e.environment.weather.humidity.toFixed(0))+" % "),n("br")]):e._e(),e.environment.weather&&e.environment.weather.clouds?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.clouds"))+": "+e._s(e.environment.weather.clouds)+" % "),n("br")]):e._e(),e.environment.weather&&e.environment.weather.wind&&e.environment.weather.speed?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.wind"))+": "+e._s(e.environment.weather.wind.speed)+" m/s "),n("br")]):e._e(),e.aqiLevel?n("span",[e._v(" "+e._s(e.$t("studies.tasks.position.airQuality"))+" : "+e._s(e.aqiLevel)),n("br")]):e._e(),e.environment.allergens&&e.environment.allergens.pollen&&e.environment.allergens.pollen.Risk?n("span",[e._v(e._s(e.$t("studies.tasks.position.allergens.riskOfGrass"))+": "+e._s(e.environment.allergens.pollen.Risk.grass_pollen)+" "),n("br")]):e._e(),e.environment.allergens&&e.environment.allergens.pollen&&e.environment.allergens.pollen.Risk?n("span",[e._v(e._s(e.$t("studies.tasks.position.allergens.riskOfTree"))+": "+e._s(e.environment.allergens.pollen.Risk.tree_pollen)+" "),n("br")]):e._e(),e.environment.allergens&&e.environment.allergens.pollen&&e.environment.allergens.pollen.Risk?n("span",[e._v(e._s(e.$t("studies.tasks.position.allergens.riskOfWeed"))+": "+e._s(e.environment.allergens.pollen.Risk.weed_pollen)+" "),n("br")]):e._e()]):e._e(),e.environment?n("div",{staticClass:"row justify-around"},[n("q-btn",{attrs:{color:"secondary",loading:e.sending,label:e.$t("common.discard")},on:{click:function(n){return e.discard()}}}),n("q-btn",{attrs:{color:"primary",loading:e.sending,label:e.$t("common.send")},on:{click:function(n){return e.send()}}})],1):e._e()],1)},i=[],o=(t("14d9"),t("a5f6")),r=t("9bf1"),a=t("c313"),l=t("6a6d"),d={name:"PositionPage",props:{studyKey:String,taskId:Number},data:function(){return{position:void 0,environment:void 0,showConnecting:!0,sending:!1}},mounted:async function(){if(await o["a"].geolocation.isAvailable()){this.showConnecting=!0,this.position=await o["a"].geolocation.getCurrentPosition();try{this.environment=await a["a"].getEnvironmentFromPosition(this.position.coords.latitude,this.position.coords.longitude),console.log(this.environment)}catch(e){console.error(e),this.$q.notify({color:"negative",message:this.$t("errors.connectionError")+" "+e.message,icon:"report_problem",timeout:0,actions:[{label:"Dismiss",color:"white",handler:()=>{this.$router.push("/home")}}]})}this.showConnecting=!1}else this.$q.notify({color:"negative",message:"No positioning available",icon:"report_problem",timeout:0,actions:[{label:"Dismiss",color:"white",handler:()=>{this.$router.push("/home")}}]})},methods:{async send(){this.sending=!0;const e=this.studyKey,n=parseInt(this.taskId),t=r["a"].user._key;let s={userKey:t,studyKey:e,taskId:n,createdTS:new Date,position:this.position,environment:this.environment};try{await a["a"].sendPosition(s),await l["a"].setTaskCompletion(e,n,new Date),this.$q.loading.hide(),this.$router.push("/home")}catch(i){this.$q.loading.hide(),console.error(i),this.$q.notify({color:"negative",message:this.$t("errors.connectionError")+" "+i.message,icon:"report_problem"}),this.sending=!1}},async discard(){this.sending=!0;const e=this.studyKey,n=parseInt(this.taskId),t=r["a"].user._key;try{await a["a"].sendPosition({userKey:t,studyKey:e,taskId:n,createdTS:new Date,phone:o["a"].device,position:"discarded",environment:"discarded"}),await l["a"].setTaskCompletion(e,n,new Date),this.$router.push({name:"home"})}catch(s){this.sending=!1,console.error(s),this.$q.notify({color:"negative",message:this.$t("errors.connectionError")+" "+s.message,icon:"report_problem"})}}},computed:{aqiLevel(){return this.environment.pollution&&this.environment.pollution.aqi?this.$t("studies.tasks.position.aqiscale.l"+this.environment.pollution.aqi):void 0}}},c=d,p=t("2877"),m=t("9989"),h=t("74f7"),v=t("8380"),u=t("9c40"),g=t("eebe"),_=t.n(g),w=Object(p["a"])(c,s,i,!1,null,null,null);n["default"]=w.exports;_()(w,"components",{QPage:m["a"],QInnerLoading:h["a"],QSpinnerDots:v["a"],QBtn:u["a"]})}}]);